{"version":3,"sources":["components/widgets/default/CardImage/index.tsx","components/widgets/default/NavBar/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["CardImage","image","title","subtitle","description","className","src","alt","href","MenuItem","NavBar","useState","showPopUp","setShowPopUp","openMenu","setOpenMenu","onBlur","type","aria-expanded","onClick","xmlns","fill","viewBox","stroke","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","console","log","id","role","aria-orientation","aria-labelledby","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.53a9c8f5.chunk.js","sourcesContent":["interface ICardImage{\n  image:string,\n  title: string,\n  subtitle: string,\n  description: string,\n}\n\nconst CardImage = ({image,title,subtitle,description}:ICardImage) => {\n  return (\n<div className=\"max-w-md mx-auto bg-white rounded-xl shadow-xl overflow-hidden md:max-w-2xl dark:bg-dark\">\n  <div className=\"md:flex\">\n    <div className=\"md:flex-shrink-0\">\n      <img className=\"h-48 w-full object-cover md:w-48\" src={image} alt={image} />\n    </div>\n    <div className=\"p-8\">\n      <div className=\"uppercase tracking-wide text-sm text-indigo-500 font-semibold\">{title}</div>\n      <a href=\"/\" className=\"block mt-1 text-lg leading-tight font-medium text-black hover:underline\">{subtitle}</a>\n      <p className=\"mt-2 text-gray-500\">{description}</p>\n    </div>\n  </div>\n</div>\n  )\n}\n\n// https://images.unsplash.com/photo-1515711660811-48832a4c6f69?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=448&q=80\n\nexport default CardImage\n","import { useState } from 'react';\n\nconst NavBar = () => {\n  const [showPopUp, setShowPopUp] = useState(false);\n  const [openMenu, setOpenMenu] = useState(false);\n  return (\n    <nav className='bg-gray-800' onBlur={() => setShowPopUp(false)}>\n      <div className='max-w-7xl mx-auto px-2 sm:px-6 lg:px-8'>\n        <div className='relative flex items-center justify-between h-16'>\n          <div className='absolute inset-y-0 left-0 flex items-center sm:hidden'>\n            {/* Mobile menu button*/}\n            <button\n              type='button'\n              className='inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white'\n              aria-expanded='false'\n              onClick={() => setOpenMenu(!openMenu)}\n            >\n              <span className='sr-only'>Open main menu</span>\n              {/* Icon when menu is closed. */}\n              {/*\n          Heroicon name: menu\n    \n          Menu open: \"hidden\", Menu closed: \"block\"\n        */}\n              <svg\n                className={`${openMenu ? 'hidden' : 'block'} h-6 w-6`}\n                xmlns='http://www.w3.org/2000/svg'\n                fill='none'\n                viewBox='0 0 24 24'\n                stroke='currentColor'\n                aria-hidden='true'\n              >\n                <path\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                  strokeWidth={2}\n                  d='M4 6h16M4 12h16M4 18h16'\n                />\n              </svg>\n              {/* Icon when menu is open. */}\n              {/*\n          Heroicon name: x\n    \n          Menu open: \"block\", Menu closed: \"hidden\"\n        */}\n              <svg\n                className={`${openMenu ? 'block' : 'hidden'} h-6 w-6`}\n                xmlns='http://www.w3.org/2000/svg'\n                fill='none'\n                viewBox='0 0 24 24'\n                stroke='currentColor'\n                aria-hidden='true'\n              >\n                <path\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                  strokeWidth={2}\n                  d='M6 18L18 6M6 6l12 12'\n                />\n              </svg>\n            </button>\n          </div>\n          <div className='flex-1 flex items-center justify-center sm:items-stretch sm:justify-start'>\n            <div className='flex-shrink-0 flex items-center'>\n              <img\n                className='block lg:hidden h-8 w-auto'\n                src='https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg'\n                alt='Workflow'\n              />\n              <img\n                className='hidden lg:block h-8 w-auto'\n                src='https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg'\n                alt='Workflow'\n              />\n            </div>\n            <div className='hidden sm:block sm:ml-6'>\n              <div className='flex space-x-4'>\n                {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\n                <MenuItem />\n              </div>\n            </div>\n          </div>\n          <div className='absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0'>\n            <button\n              type='button'\n              onClick={() => {\n                console.log('Ver Notificaciones');\n              }}\n              className='bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white'\n            >\n              <span className='sr-only'>View notifications</span>\n              {/* Heroicon name: bell */}\n              <svg\n                className='h-6 w-6'\n                xmlns='http://www.w3.org/2000/svg'\n                fill='none'\n                viewBox='0 0 24 24'\n                stroke='currentColor'\n                aria-hidden='true'\n              >\n                <path\n                  strokeLinecap='round'\n                  strokeLinejoin='round'\n                  strokeWidth={2}\n                  d='M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9'\n                />\n              </svg>\n            </button>\n            {/* Profile dropdown */}\n            <div className='ml-3 relative'>\n              <div>\n                <button\n                  type='button'\n                  className='bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white'\n                  id='user-menu'\n                  // aria-haspopup='false'\n                  onClick={() => setShowPopUp(!showPopUp)}\n                >\n                  <span className='sr-only'>Open user menu</span>\n                  <img\n                    className='h-8 w-8 rounded-full'\n                    src='https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'\n                    alt=''\n                  />\n                </button>\n              </div>\n              {/*\n          Profile dropdown panel, show/hide based on dropdown state.\n    \n          Entering: \"transition ease-out duration-100\"\n            From: \"transform opacity-0 scale-95\"\n            To: \"transform opacity-100 scale-100\"\n          Leaving: \"transition ease-in duration-75\"\n            From: \"transform opacity-100 scale-100\"\n            To: \"transform opacity-0 scale-95\"\n        */}\n              {showPopUp && (\n                <div\n                  className='origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5'\n                  role='menu'\n                  aria-orientation='vertical'\n                  aria-labelledby='user-menu'\n                >\n                  <a\n                    href='/'\n                    className='block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100'\n                    role='menuitem'\n                    onClick={() => {\n                      console.log('Dashboard');\n                    }}\n                  >\n                    Your Profile\n                  </a>\n                  <a\n                    href='/'\n                    className='block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100'\n                    role='menuitem'\n                  >\n                    Settings\n                  </a>\n                  <a\n                    href='/'\n                    className='block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100'\n                    role='menuitem'\n                  >\n                    Sign out\n                  </a>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/*\n  Mobile menu, toggle classes based on menu state.\n    \n  Menu open: \"block\", Menu closed: \"hidden\"\n*/}\n      {openMenu && (\n        <div className='block sm:hidden'>\n          <div className='px-2 pt-2 pb-3 space-y-1'>\n            <MenuItem />\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nconst MenuItem = () => (\n  <>\n    {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\n    <a\n      href='/'\n      className='bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium'\n    >\n      Dashboard\n    </a>\n    <a\n      href='/'\n      className='text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium'\n    >\n      Team\n    </a>\n    <a\n      href='/'\n      className='text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium'\n    >\n      Projects\n    </a>\n    <a\n      href='/'\n      className='text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium'\n    >\n      Calendar\n    </a>\n  </>\n);\n\nexport default NavBar;\n","import CardImage from './components/widgets/default/CardImage';\nimport NavBar from './components/widgets/default/NavBar';\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <div className='container mx-auto my-auto py-4'>\n        <CardImage\n          image='https://images.unsplash.com/photo-1515711660811-48832a4c6f69?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=448&q=80'\n          title='Case study'\n          subtitle='Finding customers for your new business!!!'\n          description='Getting a new business off the ground is a lot of hard work. Here are five ideas you can use to find your first customers.'\n        />\n\n        <button\n          type='button'\n          className='bg-blue-500 md:bg-green-400 hover:bg-red-700 md:hover:bg-blue-700 text-white rounded-xl font-bold py-2 px-4'\n        >\n          My Button\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}